#+PROPERTY: header-args :tangle "./.org-mode-contribute.emacs.el" :results output silent
#+OPTIONS: toc:3

Never compile this.

#+NAME: org_gcr_2017-07-21_mara_CC0CF0E1-0C39-4937-AD52-FBA49CA10E65
#+BEGIN_SRC emacs-lisp :comments no
;; -*- no-byte-compile: t; -*-
#+END_SRC

* Contribute
   :PROPERTIES:
   :ID:       org_gcr_2017-05-12_mara:B6246A7A-5514-4478-BC3D-7768B05B08B8
   :END:

#+NAME: org_gcr_2017-07-21_mara_CC0CF0E1-0C39-4937-AD52-FBA49CA10E65
#+BEGIN_SRC emacs-lisp :comments no
;; -*- no-byte-compile: t; -*-
#+END_SRC

Sysop is likely to use this periodically.

Start EMACS with this command:

#+BEGIN_EXAMPLE
emacs --debug-init --no-init-file --no-splash --background-color white --foreground-color black --vertical-scroll-bars --eval '(switch-to-buffer "*Messages*")' --name O2B-TEST --title O2B-TEST --load ~/src/help/.org-mode-contribute.emacs.el
#+END_EXAMPLE

#+NAME: org_gcr_2017-05-12_mara_AD27B44D-A88A-421F-9418-EE1B9E1977D5
#+BEGIN_SRC emacs-lisp
(load-file "~/src/help/.org-mode-package-management.emacs.el")
#+END_SRC

* Org2Blog Requirements
:PROPERTIES:
:ID:       org_gcr_2019-03-18T08-55-14-05-00_cosmicality:FF159E9D-B6E5-4E40-AC15-F0C01B18E0E9
:END:

Temporary setup until I get Git versions.

#+name: org_gcr_2019-03-18T08-55-14-05-00_cosmicality_2D133516-C268-4C47-9D67-DC0B258FE70D
#+begin_src emacs-lisp
(use-package dash
  :ensure t
  :config
  (dash-enable-font-lock))
(use-package dash-functional
  :ensure t)

(use-package xml-rpc
  :ensure t)
(use-package f
  :ensure t)
(use-package helpful
  :ensure t
  :config
  (global-set-key (kbd "s-a") #'helpful-at-point))
(use-package ht
  :ensure t)
(use-package hydra
  :ensure t)
(use-package go-mode
  :ensure t
  :config
  (use-package go-eldoc
    :ensure t)
  (use-package go-autocomplete
    :ensure t
    :config
    (ac-config-default))
  (use-package golint
    :ensure t)
  (use-package go-errcheck
    :ensure t)
  (use-package ob-go
    :ensure t
    :config
    (add-to-list 'org-babel-load-languages '(go . t)))
  (use-package go-snippets
    :ensure t)
  (use-package flycheck-gometalinter
    :ensure t
    :config
    (add-hook 'flycheck-mode-hook #'flycheck-gometalinter-setup)
    (setq flycheck-gometalinter-concurrency 2)
    (setq flycheck-gometalinter-deadline "7s")
    (setq flycheck-gometalinter-disable-all nil)
    (setq flycheck-gometalinter-disable-linters nil)
    (setq flycheck-gometalinter-enable-linters nil)
    (setq flycheck-gometalinter-errors-only nil)
    (setq flycheck-gometalinter-fast nil)
    (setq flycheck-gometalinter-tests t)
    (setq flycheck-gometalinter-vendor t))
  (use-package go-guru
    :ensure t)
  (use-package gotest
    :ensure t)
  (use-package go-rename
    :ensure t)
  (use-package go-direx
    :ensure t)
  (add-to-list 'load-path "~/src/go-snippets")
  (require 'go-snippets)
  (defun help/go-mode/safb/go-run ()
    ""
    (interactive)
    (let* ((compile-command (file-name-nondirectory
                             (directory-file-name default-directory))))
      (help/safb/compile)))
  (defun help/go-mode/safb/go-rename ()
    ""
    (interactive)
    (help/save-all-file-buffers)
    (call-interactively 'go-rename))
  (add-to-list 'load-path "~/git/github-anonymous/gorepl-mode")
  (require 'gorepl-mode)
  (defhydra help/hydra/right/go-mode (:color blue :hint nil)
    "
 Go: (_q_uit)              |^                   ^|^                ^|
-^------------------------^+^-------------------^+----------------^^+--------
 _e_: explorer             | _r_: run            | _t_: tools       | g_o_re
 _g_: guru                 | _j_: previous error | _k_: next error  |
 _c_: build                | _n_: rename         |                ^^|
 "
    ("e" go-direx-switch-to-buffer)
    ("r" help/go-mode/safb/go-run)
    ("t" go-hydra-go-mode/body)
    ("o" gorepl-hydra/body)
    ("g" go-hydra-guru-go-mode/body)
    ("k" godef-jump-other-window)
    ("l" pop-tag-mark)
    ("c" help/safb/compile)
    ("n" help/go-mode/safb/go-rename)
    ("j" previous-error :exit nil)
    ("k" next-error :exit nil)
    ("q" nil))
  (key-chord-define go-mode-map "hh" #'help/hydra/right/go-mode/body)
  (defun help/go-mode-hook-fn ()
    (go-eldoc-setup)
    (setq gofmt-command "goimports")
    (add-hook 'before-save-hook #'gofmt-before-save)
    (setq compilation-read-command nil)
    (setq compile-command "go install && go test -v && gometalinter ./...")
    (local-set-key (kbd "s-i") #'godoc-at-point)
    (local-set-key (kbd "s-I") #'godoc)
    (local-set-key (kbd "s-j") #'help/safb/compile)
    (local-set-key (kbd "s-k") #'help/go-mode/safb/go-run)
    (local-set-key (kbd "=") #'(lambda () (interactive) (insert " = ")))
    (local-set-key (kbd "s-=") #'(lambda () (interactive) (insert " := ")))
    (local-set-key (kbd "s-<") #'(lambda () (interactive) (insert " <- ")))
    (local-set-key (kbd "s-o") #'gorepl-hydra/body)
    (go-guru-hl-identifier-mode)
    (gorepl-mode))
  (add-hook 'go-mode-hook #'help/go-mode-hook-fn))
#+end_src

* XML-RPC
:PROPERTIES:
:ID:       org_gcr_2017-12-16_mara:8490F7FD-9718-4ADD-8A84-56A8D6625C12
:END:

#+BEGIN_QUOTE
An elisp implementation of clientside XML-RPC
#+END_QUOTE

The branch with the Unicode fix isn't necessary anymore so load it from MELPA.

#+NAME: org_gcr_2017-05-12_mara_3989AFAA-23E6-4463-98E8-90F7ED269C1B
#+BEGIN_SRC emacs-lisp
(use-package xml-rpc
  :ensure t)
#+END_SRC

* MetaWeblog
:PROPERTIES:
:ID:       org_gcr_2017-12-16_mara:C3B0266C-F9EC-498B-ABBA-486090654DDA
:END:

 #  TODO Remove this

#+BEGIN_QUOTE
Weblog maintenance via XML-RPC APIs
#+END_QUOTE

#+NAME: org_gcr_2017-05-12_mara_C057BFE2-7242-495D-BCD2-62C6389A6551
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/src/metaweblog")
(require 'metaweblog)
#+END_SRC

* Org2Blog
:PROPERTIES:
:ID:       org_gcr_2018-03-03_mara:60113001-1991-4EB5-BF61-190C198AF742
:END:
Configure Org2blog for use, development, and support.

#+BEGIN_QUOTE
Blog from Org mode to WordPress
#+END_QUOTE

#+NAME: org_gcr_2017-05-12_mara_EF1B02DF-BDB7-44AA-A018-B0BE6DA1C08F
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/src/org2blog")
(require 'org2blog)
(add-hook 'org-mode-hook #'owp-maybe-start)
(defun help/org2blog/wp-mode-hook-fn ()
  (local-set-key (kbd "s-(") #'owp-user-interface)
  (local-set-key (kbd "s-)") #'owp-complete))
(add-hook 'org2blog/wp-mode-hook #'help/org2blog/wp-mode-hook-fn)
#+END_SRC

Use [[https://www.mathjax.org/][MathJax]] instead of =wp-latex= syntax.

#+NAME: org_gcr_2017-08-14_mara_7625680E-1CA4-428E-A92F-D53114742D28
#+BEGIN_SRC emacs-lisp
(setq org2blog/wp-use-wp-latex nil)
#+END_SRC

Use [[https://wordpress.org/plugins/syntaxhighlighter/][SyntaxHighlighter Evolved]].

#+name: org_gcr_2019-03-13T19-51-47-05-00_cosmicality_54DAC301-B1D7-4772-9FEE-12FD4FD59CA0
#+begin_src emacs-lisp
(setq org2blog/wp-use-sourcecode-shortcode t)
#+end_src

Org2Blog depends on Org-Mode. This system loads Org-Mode from Git. Enter the
=ELPA= cache directory and delete it.

This system works with WisdomAndWonder. It keeps its posts separate giving focus
to each Web.

#+NAME: org_gcr_2017-05-12_mara_FF96F4B6-42B9-45D6-BEE6-6CDC9D6815AE
#+BEGIN_SRC emacs-lisp
(setq org2blog/wp-track-posts nil)
#+END_SRC

Post creation handler.

#+NAME: org_gcr_2017-08-04_mara_B782FF06-D0E7-4598-89E4-02A76E882E78
#+BEGIN_SRC emacs-lisp
(add-hook 'org2blog/wp-after-new-post-or-page-functions (lambda (p) (pp p)))
#+END_SRC

Configure Org2Blog.

#+NAME: org_gcr_2017-05-12_mara_854DE6E9-2208-42EB-A164-EC06E489B6B7
#+BEGIN_SRC emacs-lisp
(require 'auth-source)
(let* ((credentials (auth-source-user-and-password "wisdomandwonder"))
       (username (nth 0 credentials))
       (password (nth 1 credentials))
       (config `(("wisdomandwonder"
                  :url "https://www.wisdomandwonder.com/xmlrpc.php"
                  :username ,username
                  :password ,password
                  :confirm t))))
  (setq org2blog/wp-blog-alist config))
#+END_SRC

* Pretty Mode
:PROPERTIES:
:ID:       org_gcr_2017-05-15_mara:CB452410-955E-4A91-A811-10755A35A142
:END:

Visualize ASCII values as their most likely Unicode representation.

#+NAME: org_gcr_2017-05-15_mara_5CF1DF19-27F5-4509-8E17-9CA0D1B29314
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/src/pretty-mode")
(require 'pretty-mode)
#+END_SRC

* go-hydra
:PROPERTIES:
:ID:       org_gcr_2017-08-01_mara:F1CA18C6-F00E-4F1A-BBD3-77FC52B437E8
:END:

A collection of Go related Hydras for Emacs.

#+NAME: org_gcr_2017-08-01_mara_A0E420CB-EBB0-4D31-BC97-8FE54008F93D
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/src/go-hydra")
(require 'go-hydra)
#+END_SRC

* universal-emotions-emoticons
:PROPERTIES:
:ID:       org_gcr_2017-12-05_mara:BAEA6BB3-614D-4957-BEFF-4AE9E6271BF1
:END:

#+NAME: org_gcr_2017-12-05_mara_62849D6E-BD7B-4289-AC2C-CF8B51B9C633
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/src/universal-emotions-emoticons")
(require 'universal-emotions-emoticons)
#+END_SRC

* corporate-bs-generator
:PROPERTIES:
:ID:       org_gcr_2018-07-06T22-26-05-05-00_mara:EBD3FC34-3153-4E01-A8DD-099CF51A08EF
:END:

#+name: org_gcr_2018-07-06T22-26-05-05-00_mara_8504E527-9CB6-4CF7-AF8D-5E98CCA540E6
#+begin_src emacs-lisp
(add-to-list 'load-path "~/src/corporate-bs-generator")
(require 'corporate-bs-generator)
#+end_src

* affect-vs-effect
:PROPERTIES:
:ID:       org_gcr_2019-03-18T08-06-20-05-00_cosmicality:306EF58C-4CF8-414D-ACE3-86757037CF12
:END:

#+name: org_gcr_2019-03-18T08-06-20-05-00_cosmicality_9FB6C955-D16B-4548-911B-DD38AEE256C8
#+begin_src emacs-lisp
(add-to-list 'load-path "~/src/affect-vs-effect")
(require 'affect-vs-effect)
#+end_src
